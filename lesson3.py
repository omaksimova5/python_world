# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.


def exe_1(a, b):
    try:
        return a / b
    except ZeroDivisionError:
        return 'Нельзя делить на 0'
    except ValueError:
        return 'No value'

def exe_1_use():
    print(exe_1((int(input('Введите  число a: '))), (int(input('Введите число b: ')))))


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.


def exe_2(**kwargs):
    return list(kwargs.values())


def exe_2_use():
    print(exe_2(name=input('Введите имя: '),
                s_name=input('Введите фамилию: '),
                b_date=input('Введите дату рождения: '),
                l_town=input('Введите город: '),
                email=input('Введите email: '),
                tel=input('Введите телефонный номер: ')))


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.


def exe_3(a, b, c):
    z = [a, b, c]
    z.remove(min(a, b, c))
    return sum(z)


def exe_3_use():
    print(exe_3(4, 1, 9))


# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.


def exe_4(x, y):
    return 1 / x ** abs(y)


def exe_4_use():
    print(exe_4(2, -2))


def exe_41(x, y):
    for i in range(abs(y - 1)):
        x *= x
    return 1 / x


def exe_41_use():
    print(exe_4(2, -2))


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме
# и после этого завершить программу.


def exe_5():
    res = 0
    while True:
        numbers = input('Enter list of number or * to exit: ').split()
        for i in numbers:
            try:
                if i == '*':
                    print(f'Sum is {res}. Exit')
                    return
                else:
                    res += int(i)
            except ValueError:
                print('Enter number or *')
        print(f'Sum is {res}')